name: Tests

on:
  push:
    branches:
      - "master"

  pull_request:
    branches:
      - "*"

jobs:
  tests:
    name: Run tests (OS ${{ matrix.os-version }} / OTP ${{ matrix.otp-version }} / Elixir ${{ matrix.elixir-version }} / EdgeDB ${{ matrix.edgedb-version }})

    strategy:
      matrix:
        os-version:
          - "ubuntu-22.04"

        otp-version:
          - "24.3"
          - "26.0"

        elixir-version:
          - "1.12"
          - "1.13"
          - "1.14"
          - "1.15"
          - "1.16"
          - "1.17"

        edgedb-version:
          - "2.0"
          - "3.0"
          - "4.0"
          - "5.0"

        exclude:
          - elixir-version: "1.12"
            otp-version: "26.0"

          - elixir-version: "1.13"
            otp-version: "26.0"

          - elixir-version: "1.14"
            otp-version: "24.3"

          - elixir-version: "1.15"
            otp-version: "24.3"

          - elixir-version: "1.16"
            otp-version: "24.3"

          - elixir-version: "1.17"
            otp-version: "24.3"

    runs-on: ${{ matrix.os-version }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Remove non ${{ matrix.edgedb-version }} EdgeDB version modules and migrations
        env:
          EDGEDB_VERSION: ${{ matrix.edgedb-version }}
        run: |
          EDGEDB_VERSION=${EDGEDB_VERSION%%.*}

          rm -r "priv/edgedb/schema/migrations/"

          for module_file in `ls priv/edgedb/schema/`
          do
              module_version=${module_file%.esdl}
              module_version=${module_version#v}
              if test ${EDGEDB_VERSION} -lt ${module_version}
              then
                  module_path="priv/edgedb/schema/${module_file}"
                  echo "removing ${module_path}"
                  rm ${module_path}
              fi
          done

          echo "EDGEDB_VERSION=${EDGEDB_VERSION}" >> ${GITHUB_ENV}

      - uses: edgedb/setup-edgedb@v1
        with:
          server-version: ${{ matrix.edgedb-version }}
          instance-name: edgedb_elixir

      - name: Generate EdgeDB migrations
        run: |
          edgedb migration create --non-interactive
          edgedb migrate

      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp-version }}
          elixir-version: ${{ matrix.elixir-version }}

      - name: Set up cache
        uses: actions/cache@v4.2.0
        id: cache
        with:
          path: |
            deps
            _build
            priv/plts
          key: tests-${{ matrix.os-version }}-${{ matrix.otp-version }}-${{ matrix.elixir-version }}-${{ hashFiles('mix.lock') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: mix deps.get --only test

      - name: Create requried users
        run: mix edgedb.roles.setup

      - name: Run tests
        run: mix coveralls

  result:
    name: Tests conclusion

    needs: tests

    runs-on: ubuntu-22.04

    steps:
      - run: "echo 'Completed!'"
