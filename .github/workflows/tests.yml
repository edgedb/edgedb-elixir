name: Tests

on:
  push:
    branches:
      - "master"

  pull_request:
    branches:
      - "*"

jobs:
  tests:
    name: Run tests (OTP ${{ matrix.otp-version }} / Elixir ${{ matrix.elixir-version }} / EdgeDB ${{ matrix.edgedb-version }})

    runs-on: ubuntu-22.04

    strategy:
      matrix:
        otp-version:
          - "25.3.2"

        elixir-version:
          - "1.14.5"

        edgedb-version:
          - "1.0"
          - "2.0"

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Remove migrations for EdgeDB versions greater then current major version (${{ matrix.edgedb-version }})
        env:
          EDGEDB_VERSION: ${{ matrix.edgedb-version }}
        run: |
          EDGEDB_VERSION=${EDGEDB_VERSION%.*}

          for migration_file in `ls priv/edgedb/schema/migrations/`
          do
              migration_number=${migration_file%.*}
              if test ${migration_number} -gt ${EDGEDB_VERSION}
              then
                  rm "priv/edgedb/schema/migrations/${migration_file}"
              fi
          done

          echo "EDGEDB_VERSION=${EDGEDB_VERSION}" >> ${GITHUB_ENV}

      - uses: edgedb/setup-edgedb@v1.2.2
        with:
          server-version: ${{ matrix.edgedb-version }}
          instance-name: edgedb_elixir

      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp-version }}
          elixir-version: ${{ matrix.elixir-version }}

      - name: Set up cache
        uses: actions/cache@v3.0.11
        id: cache
        with:
          path: |
            deps
            _build
            priv/plts
          key: tests-${{ runner.os }}-${{ matrix.otp-version }}-${{ matrix.elixir-version }}-${{ hashFiles('mix.lock') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: mix deps.get --only test

      - name: Create requried users
        run: mix edgedb.roles.setup

      - name: Run tests
        run: mix coveralls

  result:
    name: Tests conclusion

    needs: tests

    runs-on: ubuntu-22.04

    steps:
      - run: "echo 'Completed!'"
