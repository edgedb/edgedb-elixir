# AUTOGENERATED: DO NOT MODIFY
# Generated by Elixir client for EdgeDB via `mix edgedb.generate` from
#   `test/support/codegen/edgeql/primitives/range/cal/local_datetime/multi/literal.edgeql`.
defmodule Tests.Codegen.Queries.Primitives.Range.Cal.LocalDatetime.Multi.Literal do
  @query """
  select <multirange<cal::local_datetime>>multirange([range(<cal::local_datetime>'2022-07-01T00:00:00', <cal::local_datetime>'2022-12-01T00:00:00')])
  """

  @moduledoc """
  Generated module for the EdgeQL query from
    `test/support/codegen/edgeql/primitives/range/cal/local_datetime/multi/literal.edgeql`.

  Query:

  ```edgeql
  #{@query}
  ```
  """

  @query_file "test/support/codegen/edgeql/primitives/range/cal/local_datetime/multi/literal.edgeql"

  @doc """
  Run the query.
  """
  @spec query(
          client :: EdgeDB.client(),
          opts :: list(EdgeDB.query_option())
        ) :: {:ok, EdgeDB.MultiRange.t(NaiveDateTime.t())} | {:error, reason}
        when reason: any()
  def query(client, opts \\ []) do
    do_query(client, [], opts)
  end

  @doc """
  Run the query.
  """
  @spec query!(
          client :: EdgeDB.client(),
          opts :: list(EdgeDB.query_option())
        ) :: EdgeDB.MultiRange.t(NaiveDateTime.t())
  def query!(client, opts \\ []) do
    case do_query(client, [], opts) do
      {:ok, result} ->
        result

      {:error, exc} ->
        raise exc
    end
  end

  defp do_query(client, args, opts) do
    opts = Keyword.merge(opts, __file__: @query_file)

    EdgeDB.query_required_single(client, @query, args, opts)
  end
end
