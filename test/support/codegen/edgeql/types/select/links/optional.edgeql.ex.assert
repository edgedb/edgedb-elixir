# AUTOGENERATED: DO NOT MODIFY
# Generated by Elixir client for EdgeDB via `mix edgedb.generate` from
#   `test/support/codegen/edgeql/types/select/links/optional.edgeql`.
defmodule Tests.Codegen.Queries.Types.Select.Links.Optional do
  @query """
  select v4::codegen::Aggregate {
      ol_number: {
          id,
      },
  }
  """

  @moduledoc """
  Generated module for the EdgeQL query from
    `test/support/codegen/edgeql/types/select/links/optional.edgeql`.

  Query:

  ```edgeql
  #{@query}
  ```
  """

  @query_file "test/support/codegen/edgeql/types/select/links/optional.edgeql"

  @typedoc """
  ```edgeql
  std::uuid
  ```
  """
  @type uuid() :: binary()

  defmodule Result do
    @moduledoc false

    defmodule OlNumber do
      @moduledoc false

      defstruct [
        :id
      ]

      @type t() :: %__MODULE__{
              id: Tests.Codegen.Queries.Types.Select.Links.Optional.uuid()
            }
    end

    defstruct [
      :ol_number
    ]

    @type t() :: %__MODULE__{
            ol_number: OlNumber.t() | nil
          }
  end

  @doc """
  Run the query.
  """
  @spec query(
          client :: EdgeDB.client(),
          opts :: list(EdgeDB.query_option())
        ) :: {:ok, [Result.t()]} | {:error, reason}
        when reason: any()
  def query(client, opts \\ []) do
    do_query(client, [], opts)
  end

  @doc """
  Run the query.
  """
  @spec query!(
          client :: EdgeDB.client(),
          opts :: list(EdgeDB.query_option())
        ) :: [Result.t()]
  def query!(client, opts \\ []) do
    case do_query(client, [], opts) do
      {:ok, result} ->
        result

      {:error, exc} ->
        raise exc
    end
  end

  defp do_query(client, args, opts) do
    opts = Keyword.merge(opts, __file__: @query_file)

    with {:ok, set} <- EdgeDB.query(client, @query, args, opts) do
      result =
        for element <- set do
          %Result{
            ol_number:
              with link when not is_nil(link) <- element["ol_number"] do
                %Result.OlNumber{
                  id: link["id"]
                }
              end
          }
        end

      {:ok, result}
    end
  end
end
